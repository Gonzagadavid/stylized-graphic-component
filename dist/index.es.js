import e,{Component as t,createRef as o}from"react";class a extends t{constructor(){super(),this.canvasRef=o(),this.legendCreate=this.legendCreate.bind(this),this.drawbackgound=this.drawbackgound.bind(this),this.drawBars=this.drawBars.bind(this),this.clearCanvas=this.clearCanvas.bind(this)}componentDidMount(){this.drawbackgound()}componentDidUpdate(){this.clearCanvas(),this.drawbackgound()}clearCanvas(){const e=this.canvasRef.current;e.getContext("2d").clearRect(0,0,e.width,e.height)}drawbackgound(){const{style:{widthGraph:e="1000",heightGraph:t="500",lineColor:o="black",fontSizeBackground:a="10",widthLine:r="1",fontBackground:n="monospace",percentSide:l="left"},maxPercent:i="100%"}=this.props,c="right"===l?e-4*a:10,d="70%"===i?8:"50%"===i?6:11,s=this.canvasRef.current.getContext("2d"),h=t/(d+1);let f=t-h,g=0;Array(d).fill(0).forEach((()=>{s.beginPath(),s.strokeStyle=o,s.lineWidth=r,s.moveTo(0,f),s.lineTo(e,f),s.stroke(),s.closePath(),s.fillStyle=o,s.font=`${a}px ${n}`,s.fillText(`${g}%`,c,f-2*r),f-=h,g+=10})),this.drawBars()}drawBars(){const{style:{widthBar:e="60",widthGraph:t="1000",heightGraph:o="500",fontSizeBar:a="15",fontBar:r="monospace",maxPercent:n="100%",fontColordifBar:l=!1,fontColor:i="black",topPercent:c=!1,withLegend:d=!1,baseName:s=!0},data:h={},colors:f=[]}=this.props,g=this.canvasRef.current,p=+a||20,b=r||"serif",k="70%"===n?8:"50%"===n?6:11,w=o/(k+1),C=g.getContext("2d"),u=Object.keys(h),m=Object.values(h).reduce(((e,t)=>e+ +t),0),B=o-o/(k+1),x=+e/2;let y=t/2-u.length/2*(+e+x);u.forEach(((t,o)=>{C.font=`${p}px ${b}`;const r=`${(100*+h[t]/m).toFixed(1)}%`,n=+h[t]*(10*w)/m;C.fillStyle=f[o]||"#aaa",C.fillRect(y,B,+e,-n),l&&(C.fillStyle=i||"black"),s&&C.fillText(t,y+e/8,B+p),c&&C.fillText(r,y+e/4,B-n-a/2),y+=x+ +e})),d&&this.legendCreate()}legendCreate(){const{style:{fontLegendSize:e="20",borderLegend:t="1",colorBorderLegend:o="black",colorLegend:a="white",fontLegend:r="monospace",widthGraph:n="1000",fontColorLegend:l="black",legendSide:i="right",legendVertical:c="atop",heightGraph:d="500"},data:s={},colors:h=[]}=this.props,f=this.canvasRef.current.getContext("2d"),g=Math.max(...Object.keys(s).map((e=>e.length)))*+e+5*+e,p=(+e+ +e/2)*Object.keys(s).length+2*+e,b="right"===i?n-(g+10):10,k="atop"===c?10:d-(p+10);f.fillStyle=o,f.fillRect(b-t,k-t,g+ +t,p+ +t),f.fillStyle=a,f.fillRect(b,k,g-+t,p-+t);const w=b+ +e;let C=k+ +e;h.forEach((t=>{f.fillStyle=t,f.fillRect(w,C,e,e),C+=+e+ +e/2}));const u=w+ +e+ +e/2;let m=k+(+e+ +e-e/6);const B=Object.keys(s);f.fillStyle=l,B.forEach((t=>{f.font=`${e}px ${r}`,f.fillText(t,u,m),m+=+e+ +e/2}))}render(){const{style:{widthGraph:t="1000",heightGraph:o="500",backgroundColor:a="white",widthBorder:r=1,borderColor:n="black"}=INITIAL_STATE}=this.props;return e.createElement("canvas",{className:"canvas",ref:this.canvasRef,width:t,height:o,style:{border:`${r}px solid ${n}`,backgroundColor:a}})}}a.defaultProps={data:{data1:6,data2:4},colors:["green","red"],maxPercent:"100%",style:{backgroundColor:"white",lineColor:"black",fontSizeBackground:"10",widthGraph:"1000",heightGraph:"500",widthBorder:"1",borderColor:"black",widthLine:"1",fontBackground:"monospace",percentSide:"left",widthBar:"60",fontSizeBar:"15",fontBar:"monospace",fontColordifBar:!1,fontColor:"black",topPercent:!1,baseName:!0,withLegend:!1,fontLegend:"monospace",fontLegendSize:"20",fontColorLegend:"black",colorLegend:"white",borderLegend:"1",colorBorderLegend:"black",legendSide:"right",legendVertical:"atop"}};export{a as GraphicComponent};
